{"version":3,"sources":["hoc/hoc.js","store/utility.js","store/context/myContext.js","store/actions/actionTypes.js","containers/Layout.js","store/actions/auth.js","containers/Login.js","containers/Signup.js","components/Result.js","containers/Profile.js","store/actions/gradedAssignments.js","containers/AssignmentList.js","store/actions/assignments.js","containers/Questions.js","components/Choices.js","containers/AssignmentDetail.js","containers/QuestionForm.js","containers/AssignmentCreate.js","routes.js","containers/Header.js","containers/MobileContainer.js","containers/Home.js","App.js","registerServiceWorker.js","index.js"],"names":["Hoc","props","children","updateObject","oldObject","updatedProperties","MyContext","createContext","initialState","assignments","error","loading","currentAssignment","token","username","is_student","is_teacher","userId","message","reducer","state","action","type","console","log","authStart","user","authSuccess","authFail","authLogout","getASNTListStart","getASNTListSuccess","getASNTListFail","getASNTDetailStart","assignment","getASNTDetailSuccess","getASNTDetailFail","createASNTStart","createASNTSuccess","createASNTFail","getGradedASNTListStart","getGradedASNTListSuccess","getGradedASNTListFail","createGradedASNTListStart","createGradedASNTListSuccess","createGradedASNTListFail","MyContextProvider","useReducer","dispatch","Provider","value","withRouter","Segment","style","padding","vertical","Grid","container","stackable","verticalAlign","Row","Column","Header","as","fontSize","fontVariant","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","FormItem","Form","Item","antIcon","spin","WrappedNormalLoginForm","create","useContext","errorMessage","React","useEffect","getFieldDecorator","form","indicator","onSubmit","e","preventDefault","validateFields","err","values","password","axios","post","then","res","data","key","user_type","expirationDate","Date","getTime","setItem","JSON","stringify","catch","response","non_field_errors","actions","userName","history","push","className","rules","required","prefix","color","placeholder","htmlType","marginRight","NavLink","to","Option","Select","WrappedRegistrationForm","useState","confirmDirty","setConfirmDirty","validateFieldsAndScroll","userType","email","password1","password2","confirm","pattern","validator","rule","callback","force","getFieldValue","onBlur","target","Result","percent","grade","width","strokeColor","Profile","length","slice","assig","undefined","defaults","headers","Authorization","get","getGradedASNTS","active","window","innerWidth","height","margin","top","right","bottom","left","stroke","dataKey","barSize","fill","size","dataSource","renderItem","a","id","title","AssignmentList","success","minHeight","bordered","item","class","minWidth","Link","Step","Steps","Questions","current","setCurrent","questions","progressDot","map","q","index","onClick","submit","marginLeft","RadioGroup","Radio","Group","radioStyle","display","lineHeight","Choices","questionId","usersAnswers","onChange","qId","change","choices","c","paddingRight","cardStyle","marginTop","marginBottom","AssignmentDetail","setUsersAnswers","getASNTSDetail","match","params","Object","keys","asnt","asntId","answers","createGradedASNT","order","question","QuestionForm","initialValue","formItems","k","label","validateTrigger","whitespace","disabled","setFieldsValue","filter","remove","nextKeys","concat","WrappedAssignmentCreate","formCount","setFormCount","i","el","answer","teacher","createASNT","BaseRouter","Route","exact","path","component","CustomLayout","AssignmentCreate","Login","Signup","HomepageHeading","mobile","Container","text","content","inverted","fontWeight","fontFamily","Media","createMedia","breakpoints","tablet","computer","sidebarOpened","setSidebarOpened","isAuthenticated","Sidebar","Pushable","at","Menu","animation","onHide","visible","Pusher","dimmed","textAlign","pointing","secondary","Icon","name","position","Button","MediaContextProvider","ResponsiveContainer","HomepageLayout","divided","App","parse","getItem","Home","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.69becc14.chunk.js","sourcesContent":["const Hoc = props => props.children;\r\n\r\nexport default Hoc;\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties\r\n  };\r\n};\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\nimport React, { useReducer, createContext } from \"react\";\r\nimport { message } from \"antd\";\r\n\r\n\r\nexport const MyContext = createContext();\r\n\r\nconst initialState = {\r\n  assignments: [],\r\n  error: null,\r\n  loading: false,\r\n  currentAssignment: {},\r\n  token: null,\r\n  username: null,\r\n  is_student: null,\r\n  is_teacher: null,\r\n  userId: null,\r\n  message: null,\r\n};\r\n\r\nconst getGradedASNTListStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst getGradedASNTListSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    assignments: action.assignments,\r\n    error: null,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst getGradedASNTListFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst createGradedASNTListStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true,\r\n    message:null,\r\n  });\r\n};\r\n\r\nconst createGradedASNTListSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    message: action.message,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst createGradedASNTListFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    message:null,\r\n    loading: false\r\n  });\r\n};\r\n\r\n\r\n\r\nconst getASNTListStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst getASNTListSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    assignments: action.assignments,\r\n    error: null,\r\n    loading: false,\r\n    message:null,\r\n  });\r\n};\r\n\r\nconst getASNTListFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst getASNTDetailStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst getASNTDetailSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    currentAssignment: action.assignment,\r\n    error: null,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst getASNTDetailFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst createASNTStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst createASNTSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst createASNTFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\nconst authStart = (state, action) => {\r\n  console.log('started')\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.user.token,\r\n    username: action.user.username,\r\n    is_student: action.user.is_student,\r\n    is_teacher: action.user.is_teacher,\r\n    userId: action.user.userId,\r\n    error: null,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n  return updateObject(state, initialState);\r\n};\r\n\r\n\r\n\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state, action);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state, action);\r\n    case actionTypes.GET_ASSIGNMENT_LIST_START:\r\n      return getASNTListStart(state, action);\r\n    case actionTypes.GET_ASSIGNMENTS_LIST_SUCCESS:\r\n      return getASNTListSuccess(state, action);\r\n    case actionTypes.GET_ASSIGNMENTS_LIST_FAIL:\r\n      return getASNTListFail(state, action);\r\n    case actionTypes.GET_ASSIGNMENT_DETAIL_START:\r\n      return getASNTDetailStart(state, action);\r\n    case actionTypes.GET_ASSIGNMENT_DETAIL_SUCCESS:\r\n      return getASNTDetailSuccess(state, action);\r\n    case actionTypes.GET_ASSIGNMENT_DETAIL_FAIL:\r\n      return getASNTDetailFail(state, action);\r\n    case actionTypes.CREATE_ASSIGNMENT_START:\r\n      return createASNTStart(state, action);\r\n    case actionTypes.CREATE_ASSIGNMENT_SUCCESS:\r\n      return createASNTSuccess(state, action);\r\n    case actionTypes.CREATE_ASSIGNMENT_FAIL:\r\n      return createASNTFail(state, action);\r\n    case actionTypes.GET_GRADED_ASSIGNMENT_LIST_START:\r\n      return getGradedASNTListStart(state, action);\r\n    case actionTypes.GET_GRADED_ASSIGNMENTS_LIST_SUCCESS:\r\n      return getGradedASNTListSuccess(state, action);\r\n    case actionTypes.GET_GRADED_ASSIGNMENTS_LIST_FAIL:\r\n      return getGradedASNTListFail(state, action);  \r\n    case actionTypes.CREATE_GRADED_ASSIGNMENT_LIST_START:\r\n      return createGradedASNTListStart(state, action);\r\n    case actionTypes.CREATE_GRADED_ASSIGNMENTS_LIST_SUCCESS:\r\n      return createGradedASNTListSuccess(state, action);\r\n    case actionTypes.CREATE_GRADED_ASSIGNMENTS_LIST_FAIL:\r\n      return createGradedASNTListFail(state, action);    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n// const useAsyncReducer = (reducer, initialState) => {\r\n//   const [state, setState] = useState(initialState);\r\n\r\n//   const dispatch = async action => {\r\n//     const result = reducer(state, action);\r\n//     if (typeof result.then === \"function\") {\r\n//       try {\r\n//         const newState = await result;\r\n//         setState(newState);\r\n//       } catch (err) {\r\n//         setState({ ...state, error: err });\r\n//       }\r\n//     } else {\r\n//       setState(result);\r\n//     }\r\n//   };\r\n\r\n//   return [state, dispatch];\r\n// };\r\n\r\n// //export default useAsyncReducer;\r\n\r\nexport const MyContextProvider = props => {\r\n   const [state, dispatch] = useReducer(reducer, initialState);\r\n   //const [state, dispatch] = useAsyncReducer(reducer, initialState);\r\n  return (\r\n    <MyContext.Provider value={{state, dispatch}}>\r\n      {props.children}\r\n    </MyContext.Provider>\r\n  );\r\n};\r\n\r\n\r\n","export const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const GET_ASSIGNMENT_LIST_START = \"GET_ASSIGNMENT_LIST_START\";\r\nexport const GET_ASSIGNMENTS_LIST_FAIL = \"GET_ASSIGNMENTS_LIST_FAIL\";\r\nexport const GET_ASSIGNMENTS_LIST_SUCCESS = \"GET_ASSIGNMENTS_LIST_SUCCESS\";\r\n\r\nexport const GET_ASSIGNMENT_DETAIL_START = \"GET_ASSIGNMENT_DETAIL_START\";\r\nexport const GET_ASSIGNMENT_DETAIL_FAIL = \"GET_ASSIGNMENT_DETAIL_FAIL\";\r\nexport const GET_ASSIGNMENT_DETAIL_SUCCESS = \"GET_ASSIGNMENT_DETAIL_SUCCESS\";\r\n\r\nexport const CREATE_ASSIGNMENT_START = \"CREATE_ASSIGNMENT_START\";\r\nexport const CREATE_ASSIGNMENT_FAIL = \"CREATE_ASSIGNMENT_FAIL\";\r\nexport const CREATE_ASSIGNMENT_SUCCESS = \"CREATE_ASSIGNMENT_SUCCESS\";\r\n\r\nexport const GET_GRADED_ASSIGNMENT_LIST_START =\r\n  \"GET_GRADED_ASSIGNMENT_LIST_START\";\r\nexport const GET_GRADED_ASSIGNMENTS_LIST_FAIL =\r\n  \"GET_GRADED_ASSIGNMENTS_LIST_FAIL\";\r\nexport const GET_GRADED_ASSIGNMENTS_LIST_SUCCESS =\r\n  \"GET_GRADED_ASSIGNMENTS_LIST_SUCCESS\";\r\n\r\nexport const CREATE_GRADED_ASSIGNMENT_LIST_START =\r\n  \"CREATE_GRADED_ASSIGNMENT_LIST_START\";\r\nexport const CREATE_GRADED_ASSIGNMENTS_LIST_FAIL =\r\n  \"CREATE_GRADED_ASSIGNMENTS_LIST_FAIL\";\r\nexport const CREATE_GRADED_ASSIGNMENTS_LIST_SUCCESS =\r\n  \"CREATE_GRADED_ASSIGNMENTS_LIST_SUCCESS\";  ","import React, { useContext} from \"react\";\r\nimport {MyContext} from '../store/context/myContext';\r\nimport { Layout, Menu, Breadcrumb } from \"antd\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport {Button, Container, Divider,\r\n  Grid, Header, Image, List,\r\n  Segment} from 'semantic-ui-react';\r\n\r\n\r\nconst CustomLayout = (props) => {\r\n  \r\n//   const {state, dispatch} = useContext(MyContext);\r\n//   const isAuthenticated = state.token !== null\r\n  \r\n//   const logout = () => {\r\n//     actions.logout(dispatch)\r\n//     props.history.push(\"/\");\r\n//   }\r\n\r\n  return (\r\n    <Segment style={{ padding: '3em 0em' }} vertical>\r\n    <Grid container stackable verticalAlign='middle'>\r\n      <Grid.Row>\r\n        <Grid.Column >\r\n          <Header as='h3' style={{ fontSize: '2em' }}>\r\n            We Help you Expand your mind and Intuition\r\n          </Header>\r\n          <p style={{ fontSize: '1.33em',fontVariant: 'small-caps', padding: '3em 0em' }}>\r\n            We can give you superpowers to imagine and build processes that they never thought possible.\r\n           </p>\r\n          <p style={{ fontSize: '1.33em',fontVariant: 'small-caps', padding: '3em 0em'}}>\r\n             Let us feed your wild imaginations and whet your passion... through pure chemical engineering.\r\n          </p>\r\n          {/* <Header as='h3' style={{ fontSize: '2em' }}>\r\n            We Make Bananas That Can Dance\r\n          </Header>\r\n          <p style={{ fontSize: '1.33em' }}>\r\n            Yes that's right, you thought it was the stuff of dreams, but even bananas can be\r\n            bioengineered.\r\n          </p> */}\r\n        </Grid.Column>\r\n        {/* <Grid.Column floated='right' width={6}>\r\n          <Image bordered rounded size='large' src='/images/wireframe/white-image.png' />\r\n        </Grid.Column> */}\r\n      </Grid.Row>\r\n      {/* <Grid.Row>\r\n        <Grid.Column textAlign='center'>\r\n          <Button size='huge'>Check Them Out</Button>\r\n        </Grid.Column>\r\n      </Grid.Row> */}\r\n    </Grid>\r\n  </Segment>\r\n//       <Layout className=\"layout\">\r\n      \r\n//         <Header>\r\n//           <div className=\"logo\" />\r\n//           <Menu\r\n//             theme=\"dark\"\r\n//             mode=\"horizontal\"\r\n//             defaultSelectedKeys={[\"2\"]}\r\n//             style={{ lineHeight: \"64px\" }}\r\n//           >\r\n//             { isAuthenticated ? (\r\n//               <Menu.Item key=\"2\" onClick={logout} >\r\n//                 Logout\r\n//               </Menu.Item>\r\n//             ) : (\r\n//               <Menu.Item key=\"2\">\r\n//                 <Link to=\"/login\">Login</Link>\r\n//               </Menu.Item>\r\n//             )}\r\n//           </Menu>\r\n//         </Header>\r\n//         <Content style={{ padding: \"0 50px\" }}>\r\n//           <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n//             <Breadcrumb.Item>\r\n//               <Link to=\"/\">Home</Link>\r\n//             </Breadcrumb.Item>\r\n//             {isAuthenticated ? (\r\n//               <Breadcrumb.Item>\r\n//                 <Link to={`/profile/${state.userId}`}>Profile</Link>\r\n//               </Breadcrumb.Item>\r\n//             ) : null}\r\n//             {isAuthenticated && state.is_teacher ? (\r\n//               <Breadcrumb.Item>\r\n//                 <Link to=\"/create\">Create</Link>\r\n//               </Breadcrumb.Item>\r\n//             ) : null}\r\n//           </Breadcrumb>\r\n//           <div style={{ background: \"#fff\", padding: 24, minHeight: 280 }}>\r\n//             {props.children}\r\n//           </div>\r\n//         </Content>\r\n//         <Footer style={{ textAlign: \"center\" }}>\r\n//           CheArt for Chemical Engineering Students\r\n//         </Footer>\r\n//       </Layout>\r\n   );\r\n\r\n };\r\n\r\nexport default withRouter(CustomLayout);\r\n","import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START\r\n  };\r\n};\r\n\r\nexport const authSuccess = user => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    user:user\r\n  };\r\n};\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const logout = (dispatch) => {\r\n  localStorage.removeItem(\"user\");\r\n  dispatch( {\r\n    type: actionTypes.AUTH_LOGOUT\r\n  });\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime,dispatch) => {\r\n  return (\r\n    setTimeout(() => {\r\n      logout(dispatch);\r\n    }, expirationTime * 1000)\r\n  )\r\n  };\r\n  \r\n\r\nexport const authLogin = (username, password, dispatch) => {\r\n  \r\n    dispatch(authStart());\r\n  \r\n    axios\r\n      .post(\"/rest-auth/login/\", {\r\n        username: username,\r\n        password: password\r\n      })\r\n      .then(res => {\r\n        const user = {\r\n          token: res.data.key,\r\n          username:username,\r\n          userId: res.data.user,\r\n          is_student: res.data.user_type.is_student,\r\n          is_teacher: res.data.user_type.is_teacher,\r\n          expirationDate: new Date(new Date().getTime() + 3600 * 1000),\r\n          error:null\r\n        };\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        dispatch(authSuccess(user));\r\n        checkAuthTimeout(3600,dispatch);\r\n      })\r\n      .catch(err => {\r\n        dispatch(authFail(err.response.data.non_field_errors));\r\n      });\r\n  };\r\n\r\n\r\nexport const authSignup = (\r\n  username,\r\n  email,\r\n  password1,\r\n  password2,\r\n  is_student,\r\n  is_teacher,dispatch\r\n) => {\r\n  \r\n    dispatch(authStart());\r\n    const user = {\r\n      username,\r\n      email,\r\n      password1,\r\n      password2,\r\n      is_student:is_student,\r\n      is_teacher: is_teacher\r\n    };\r\n    axios\r\n      .post(\"/rest-auth/registration/\", user)\r\n      .then(res => {\r\n        const user = {\r\n          token: res.data.key,\r\n          username:username,\r\n          userId: res.data.user,\r\n          is_student,\r\n          is_teacher,\r\n          expirationDate: new Date(new Date().getTime() + 3600 * 1000)\r\n        };\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        dispatch(authSuccess(user));\r\n        checkAuthTimeout(3600,dispatch);\r\n      })\r\n      .catch(err => {\r\n        dispatch(authFail(err.response.data.non_field_errors));\r\n      });\r\n  };\r\n\r\nexport const authCheckState = (dispatch) => {\r\n  \r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user === undefined || user === null) {\r\n      logout(dispatch);\r\n    } else {\r\n      const expirationDate = new Date(user.expirationDate);\r\n      if (expirationDate <= new Date()) {\r\n        logout(dispatch);\r\n      } else {\r\n        dispatch(authSuccess(user));\r\n        \r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          ,dispatch);\r\n      }\r\n    }\r\n  };\r\n\r\n","import React, { useContext} from \"react\";\r\nimport {MyContext} from '../store/context/myContext';\r\nimport { Form, Icon, Input, Button, Spin, message } from \"antd\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport * as actions from \"../store/actions/auth\";\r\n\r\nconst FormItem = Form.Item;\r\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\r\n\r\nconst NormalLoginForm = (props) => {\r\n\r\n  const {state, dispatch } = useContext(MyContext)\r\n\r\n\r\n  var errorMessage = null;\r\n  React.useEffect(() => {\r\n   \r\n    if (state.error) { errorMessage = message.error(state.error)}\r\n    // console.log(state.error, errorMessage)\r\n  }, [state.error]);\r\n\r\n    const { getFieldDecorator } = props.form;\r\n\r\n    const handleSubmit = e => {\r\n      e.preventDefault();\r\n      props.form.validateFields((err, values) => {\r\n        if (!err) {\r\n          actions.authLogin(values.userName, values.password,dispatch)\r\n          //console.log(values.userName, values.password)\r\n         }\r\n      });\r\n      if (!state.error || state.token){\r\n        \r\n        props.history.push(\"/\");\r\n      }\r\n    };\r\n   \r\n   \r\n    return (\r\n      <div>\r\n        {errorMessage}\r\n        {state.loading ? (\r\n          <Spin indicator={antIcon} />\r\n        ) : (\r\n          <Form onSubmit={handleSubmit} className=\"login-form\">\r\n            <FormItem>\r\n              {getFieldDecorator(\"userName\", {\r\n                rules: [\r\n                  { required: true, message: \"Please input your username!\" }\r\n                ]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"Username\"\r\n                />\r\n              )}\r\n            </FormItem>\r\n\r\n            <FormItem>\r\n              {getFieldDecorator(\"password\", {\r\n                rules: [\r\n                  { required: true, message: \"Please input your Password!\" }\r\n                ]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              )}\r\n            </FormItem>\r\n\r\n            <FormItem>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                style={{ marginRight: \"10px\" }}\r\n              >\r\n                Login\r\n              </Button>\r\n              Or\r\n              <NavLink style={{ marginRight: \"10px\" }} to=\"/signup/\">\r\n                {\" \"}\r\n                Signup\r\n              </NavLink>\r\n            </FormItem>\r\n          </Form>\r\n        )}\r\n      </div>\r\n    );\r\n};\r\n\r\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\r\n\r\n\r\nexport default withRouter(WrappedNormalLoginForm);\r\n","import React, { useContext,useState} from \"react\";\r\nimport {MyContext} from '../store/context/myContext';\r\nimport { Form, Input, Icon, Button, Select } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport * as actions from \"../store/actions/auth\";\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nconst RegistrationForm = (props) => {\r\n  \r\n  const {dispatch} = useContext(MyContext)\r\n  //const {loading, error} = state\r\n\r\n  const [confirmDirty, setConfirmDirty] = useState(false)\r\n  \r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        let is_student = false;\r\n        let is_teacher = false;\r\n        values.userType === \"student\" &&  (is_student = true );\r\n        values.userType === \"teacher\" &&  (is_teacher = true );\r\n        actions.authSignup(values.userName, values.email,values.password,\r\n          values.confirm, is_student,is_teacher,dispatch)\r\n          props.history.push(\"/\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleConfirmBlur = e => {\r\n    const value = e.target.value;\r\n    setConfirmDirty(confirmDirty || !!value );\r\n  };\r\n\r\n  const compareToFirstPassword = (rule, value, callback) => {\r\n    const form = props.form;\r\n    if (value && value !== form.getFieldValue(\"password\")) {\r\n      callback(\"Two passwords that you enter is inconsistent!\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  const validateToNextPassword = (rule, value, callback) => {\r\n    const form = props.form;\r\n    if (value && confirmDirty) {\r\n      form.validateFields([\"confirm\"], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n    const { getFieldDecorator } = props.form;\r\n\r\n    return (\r\n      <Form onSubmit={handleSubmit}>\r\n        <FormItem>\r\n          {getFieldDecorator(\"userName\", {\r\n            rules: [{ required: true, message: \"Please input your username!\" }]\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder=\"Username\"\r\n            />\r\n          )}\r\n        </FormItem>\r\n\r\n        <FormItem>\r\n          {getFieldDecorator(\"email\", {\r\n            rules: [\r\n              {\r\n                type: \"email\",\r\n                message: \"The input is not valid E-mail!\"\r\n              },\r\n              {\r\n                required: true,\r\n                message: \"Please input your E-mail!\"\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder=\"Email\"\r\n            />\r\n          )}\r\n        </FormItem>\r\n\r\n        <FormItem>\r\n          {getFieldDecorator(\"password\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your password!\"\r\n              },\r\n              {\r\n                pattern: /^(?=.*\\d)(?=.*[a-z]).{8,}$/,\r\n                message: \"Must contain at least one number and lowercase letter, and at least 8 characters\"\r\n              },\r\n              {\r\n                validator: validateToNextPassword\r\n              },\r\n              \r\n            ]\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              type=\"password\" \r\n              placeholder=\"Password\"\r\n            />\r\n          )}\r\n        </FormItem>\r\n\r\n        <FormItem>\r\n          {getFieldDecorator(\"confirm\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please confirm your password!\"\r\n              },\r\n              {\r\n                validator: compareToFirstPassword\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onBlur={handleConfirmBlur}\r\n            />\r\n          )}\r\n        </FormItem>\r\n\r\n        <FormItem>\r\n          {getFieldDecorator(\"userType\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please select a user!\"\r\n              }\r\n            ]\r\n          })(\r\n            <Select placeholder=\"Select a user type\">\r\n              <Option value=\"student\">Student</Option>\r\n              <Option value=\"teacher\">Teacher</Option>\r\n            </Select>\r\n          )}\r\n        </FormItem>\r\n\r\n        <FormItem>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            style={{ marginRight: \"10px\" }}\r\n          >\r\n            Signup\r\n          </Button>\r\n          Or {  \"\"}\r\n          <NavLink style={{ marginRight: \"10px\" }} to=\"/login/\">\r\n            Login\r\n          </NavLink>\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  };\r\nconst WrappedRegistrationForm = Form.create()(RegistrationForm);\r\n\r\n\r\nexport default WrappedRegistrationForm;\r\n","import React from \"react\";\r\nimport { Progress } from \"antd\";\r\n\r\nconst Result = props => (\r\n\r\n\r\n  <Progress type=\"dashboard\" percent={props.grade} width={80} \r\n    strokeColor={{\r\n        '0%': '#108ee9',\r\n        '100%': '#87d068',\r\n      }}\r\n  />\r\n \r\n);\r\n\r\nexport default Result;\r\n","import React,  { useContext, useEffect } from \"react\";\r\nimport { List, Skeleton } from \"antd\";\r\nimport Result from \"../components/Result\";\r\nimport { getGradedASNTS } from \"../store/actions/gradedAssignments\";\r\nimport Hoc from \"../hoc/hoc\";\r\nimport {MyContext} from '../store/context/myContext';\r\nimport { ComposedChart, Area, Bar,\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip,Legend, Scatter,\r\n} from 'recharts';\r\nimport { curveCardinal } from 'd3-shape';\r\n\r\n\r\n// const cardinal = curveCardinal.tension(0.2);\r\n\r\n\r\nconst  Profile = () => {\r\n\r\n  const {state, dispatch} = useContext(MyContext);\r\n  const {token,username,assignments, loading} = state;\r\n\r\n  if (assignments.length >= 10) {\r\n    var data = assignments.slice(-10,)\r\n  } else{\r\n    var data = assignments}\r\n   \r\n\r\n  if(assignments.length >= 5){\r\n    var assig= assignments.slice(-5,)\r\n  } else {\r\n    var assig = assignments\r\n  }\r\n  useEffect(() => {\r\n   if (token !== undefined && token !== null) {\r\n     getGradedASNTS(username, token,dispatch);\r\n   }\r\n    }, [token])\r\n\r\n    // console.log(assignments)\r\n    return (\r\n      <Hoc>\r\n        {loading ? (\r\n          <Skeleton active />\r\n        ) : (\r\n          <Hoc>\r\n            <h1>Welcome  {username}</h1>\r\n            <br/>\r\n            {/* <div> */}\r\n            <ComposedChart\r\n              width={0.80 *window.innerWidth}\r\n              height={400}\r\n              data={data}\r\n              \r\n              margin={{\r\n                top: 20, right: 20, bottom: 20, left: 20,\r\n              }}\r\n            >\r\n              <CartesianGrid stroke=\"#f5f5f5\" />\r\n              <XAxis dataKey=\"data\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              {/* <Area type=\"monotone\" dataKey=\"grade\" fill=\"#8884d8\" stroke=\"#8884d8\" /> */}\r\n              <Bar dataKey=\"grade\" barSize={40} fill=\"#413ea0\" />\r\n              <Line type=\"monotone\" dataKey=\"grade\" stroke=\"#ff7300\" />\r\n              <Scatter dataKey=\"grade\" fill=\"red\" />\r\n            </ComposedChart>\r\n            {/* </div> */}\r\n            {/* <LineChart\r\n              width={500}\r\n              height={400}\r\n              data={data}\r\n              margin={{\r\n                top: 10, right: 30, left: 0, bottom: 0,\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"assignment\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Line type=\"monotone\" dataKey=\"grade\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.3} />\r\n              {/* <Area type={cardinal} dataKey=\"grade\" stroke=\"#82ca9d\" fill=\"#82ca9d\" fillOpacity={0.3} /> */}\r\n            {/* </LineChart> */}\r\n            <br/>\r\n            <p style={{fontSize: 'large'}}>Previous submissions</p>\r\n            <List\r\n              size=\"large\"\r\n              dataSource={assig.slice(-5,)}\r\n              renderItem={a => <div><Result key={a.id} grade={a.grade} title = {a.assignment}/>\r\n              <span>  {a.assignment}</span></div>}\r\n            />\r\n          </Hoc>\r\n        )}\r\n        \r\n      </Hoc>\r\n    );\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     token: state.auth.token,\r\n//     username: state.auth.username,\r\n    \r\n//   };\r\n// };\r\n\r\n\r\nexport default Profile;\r\n","import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nconst getGradedASNTListStart = () => {\r\n  return {\r\n    type: actionTypes.GET_GRADED_ASSIGNMENT_LIST_START\r\n  };\r\n};\r\n\r\nconst getGradedASNTListSuccess = assignments => {\r\n  return {\r\n    type: actionTypes.GET_GRADED_ASSIGNMENTS_LIST_SUCCESS,\r\n    assignments\r\n  };\r\n};\r\n\r\nconst getGradedASNTListFail = error => {\r\n  return {\r\n    type: actionTypes.GET_GRADED_ASSIGNMENTS_LIST_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nconst createGradedASNTListStart = () => {\r\n  return {\r\n    type: actionTypes.CREATE_GRADED_ASSIGNMENT_LIST_START,\r\n    \r\n  };\r\n};\r\nconst createGradedASNTListSuccess = message => {\r\n  return {\r\n    type: actionTypes.CREATE_GRADED_ASSIGNMENTS_LIST_SUCCESS,\r\n    message:message,\r\n  };\r\n};\r\n\r\nconst createGradedASNTListFail = error => {\r\n  return {\r\n    type: actionTypes.CREATE_GRADED_ASSIGNMENTS_LIST_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const getGradedASNTS = (username, token,dispatch) => {\r\n \r\n    dispatch(getGradedASNTListStart());\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    };\r\n    axios\r\n      .get(`/graded-assignments/?username=${username}`)\r\n      .then(res => {\r\n        const assignments = res.data;\r\n        dispatch(getGradedASNTListSuccess(assignments));\r\n        console.log(assignments)\r\n      })\r\n      .catch(err => {\r\n        dispatch(getGradedASNTListFail(err.response.data.message));\r\n      });\r\n  };\r\n\r\nexport const createGradedASNT = (token, asnt, dispatch) => {\r\n  \r\n      dispatch(createGradedASNTListStart());\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    };\r\n   axios\r\n      .post(`/graded-assignments/create/`, asnt)\r\n      .then(res => {\r\n        // console.log(\"success\",asnt);\r\n        //console.log('now',res);\r\n          dispatch(createGradedASNTListSuccess('Submitted'));\r\n      })\r\n      .catch(err => {\r\n        console.log('now',err);\r\n          dispatch(createGradedASNTListFail(err));\r\n      });\r\n};\r\n","import React, { useContext,useEffect } from \"react\";\r\nimport {MyContext} from '../store/context/myContext';\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, Skeleton, message } from \"antd\";\r\nimport * as actions from \"../store/actions/assignments\";\r\nimport Hoc from \"../hoc/hoc\";\r\n\r\nconst AssignmentList = () => {\r\n\r\n    const {state, dispatch} = useContext(MyContext)\r\n    const {token, loading, assignments} = state\r\n\r\n    var errorMessage = null;\r\n\r\n    useEffect(() => {\r\n      if (token !== undefined && token !== null) {\r\n        actions.getASNTS(token,dispatch);\r\n      }\r\n      if (state.error) { errorMessage = message.error(state.error)};\r\n    \r\n      if (state.message) { errorMessage = message.success(state.message)};\r\n  \r\n      }, [token, state.error, state.message]) \r\n      \r\n    return (\r\n      <Hoc>\r\n      {errorMessage}\r\n        {loading ? (\r\n          <Skeleton active />\r\n        ) : (\r\n          <div>\r\n            <h3 style={{margin: \"5px 0\" }}>Assignment List</h3>\r\n            <List style={{minHeight: 500, }}\r\n              size=\"large\"\r\n              bordered\r\n              dataSource={assignments}\r\n              renderItem={item => \r\n                                  <List.Item><div class=\"ui cards\" >\r\n                                        <div class=\"card\" style ={{minWidth:'400px'}}>\r\n                                          <div class=\"content\">\r\n                                            <div class=\"description\">\r\n                                            {item.title}\r\n                                            </div>\r\n                                          </div>\r\n                                          <div class=\"ui bottom attached button\">\r\n                                          <Link to={`/assignments/${item.id}`}>\r\n                                            <i class=\"play icon\"></i>\r\n                                            Take Test\r\n                                            </Link>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div></List.Item>}\r\n                   />            \r\n          </div>\r\n        )}\r\n      </Hoc>\r\n    );\r\n  };\r\n\r\n\r\nexport default AssignmentList;\r\n\r\n","import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nconst getASNTListStart = () => {\r\n  return {\r\n    type: actionTypes.GET_ASSIGNMENT_LIST_START\r\n  };\r\n};\r\n\r\nconst getASNTListSuccess = assignments => {\r\n  return {\r\n    type: actionTypes.GET_ASSIGNMENTS_LIST_SUCCESS,\r\n    assignments\r\n  };\r\n};\r\n\r\nconst getASNTListFail = error => {\r\n  return {\r\n    type: actionTypes.GET_ASSIGNMENTS_LIST_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const getASNTS = (token,dispatch) => {\r\n  \r\n    dispatch(getASNTListStart());\r\n     axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    };\r\n    \r\n     axios\r\n      .get(\"/assignments/\")\r\n      .then(res => {\r\n        const assignments = res.data;\r\n        console.log(token,assignments);\r\n        dispatch(getASNTListSuccess(assignments));\r\n      })\r\n      .catch(err => {\r\n        dispatch(getASNTListFail(err.response.data.message));\r\n      });\r\n      \r\n  \r\n};\r\n\r\nconst getASNTDetailStart = () => {\r\n  return {\r\n    type: actionTypes.GET_ASSIGNMENT_DETAIL_START\r\n  };\r\n};\r\n\r\nconst getASNTDetailSuccess = assignment => {\r\n  return {\r\n    type: actionTypes.GET_ASSIGNMENT_DETAIL_SUCCESS,\r\n    assignment\r\n  };\r\n};\r\n\r\nconst getASNTDetailFail = error => {\r\n  return {\r\n    type: actionTypes.GET_ASSIGNMENT_DETAIL_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const getASNTSDetail = (token, id, dispatch) => {\r\n  \r\n    dispatch(getASNTDetailStart());\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    };\r\n     axios\r\n      .get(`/assignments/${id}/`)\r\n      .then(res => {\r\n        const assignment = res.data;\r\n        dispatch(getASNTDetailSuccess(assignment));\r\n        console.log(token,assignment);\r\n      })\r\n      .catch(err => {\r\n        dispatch(getASNTDetailFail(err.response.data.message));\r\n      });\r\n};\r\n\r\nconst createASNTStart = () => {\r\n  return {\r\n    type: actionTypes.CREATE_ASSIGNMENT_START\r\n  };\r\n};\r\n\r\nconst createASNTSuccess=() => {\r\n  return {\r\n    type: actionTypes.CREATE_ASSIGNMENT_SUCCESS,\r\n    \r\n  };\r\n};\r\n\r\nconst createASNTFail = error => {\r\n  return {\r\n    type: actionTypes.CREATE_ASSIGNMENT_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const createASNT = (token, asnt,dispatch) => {\r\n \r\n    dispatch(createASNTStart());\r\n    console.log(token,asnt)\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    };\r\n  axios\r\n      .post(`/assignments/`, asnt)\r\n      .then(res => {\r\n        dispatch(createASNTSuccess());\r\n        ;\r\n\r\n      })\r\n      .catch(err => {\r\n        dispatch(createASNTFail(err.response.data.message));\r\n      });\r\n  \r\n};\r\n","import React, { useState} from \"react\";\r\nimport { Steps, Button } from \"antd\";\r\n\r\nconst Step = Steps.Step;\r\n\r\nconst Questions = (props) => {\r\n\r\nconst [current, setCurrent] = useState(0)\r\n\r\n  \r\n  const next = () => {\r\n     const curr = current + 1;\r\n    setCurrent( curr);\r\n  }\r\n\r\n  const prev = () => {\r\n    const curr = current - 1;\r\n    setCurrent( curr);\r\n  }\r\n\r\n  \r\n  const { questions } = props;\r\n\r\n    return (\r\n      <div>\r\n        <Steps progressDot current={current}>\r\n          {questions.map((q, index) => (\r\n            <Step key={index} />\r\n          ))}\r\n        </Steps>\r\n        <div>{questions[current]}</div>\r\n        <div>\r\n          {current < questions.length - 1 && (\r\n            <Button type=\"primary\" onClick={next}>\r\n              Next\r\n            </Button>\r\n          )}\r\n          {current === questions.length - 1 && (\r\n            <Button type=\"primary\" onClick={props.submit}>\r\n              Submit\r\n            </Button>\r\n          )}\r\n          {current > 0 && (\r\n            <Button style={{ marginLeft: 8 }} onClick={prev}>\r\n              Previous\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Questions;\r\n","import React from \"react\";\r\nimport { Divider, Radio } from \"antd\";\r\n\r\nconst RadioGroup = Radio.Group;\r\n\r\nconst radioStyle = {\r\n  display: \"block\",\r\n  height: \"30px\",\r\n  lineHeight: \"30px\"\r\n};\r\n\r\nconst Choices = (props) => { \r\n    const { questionId } = props;\r\n    const { usersAnswers } = props;\r\n    return (\r\n      <RadioGroup\r\n        onChange={(e, qId) => props.change(e, questionId)}\r\n        value={\r\n          usersAnswers[questionId] !== undefined &&\r\n          usersAnswers[questionId] !== null\r\n            ? usersAnswers[questionId]\r\n            : null\r\n        }\r\n      >\r\n        {props.choices.map((c, index) => {\r\n          return (<div style={{\r\n                paddingRight: '20px',\r\n              }}>\r\n            <Radio style={radioStyle} value={c} key={index}>\r\n              {c}\r\n            </Radio>\r\n            </div>\r\n          );\r\n        })}\r\n      </RadioGroup>\r\n    );\r\n  };\r\n\r\nexport default Choices;\r\n","import React,  { useContext, useEffect, useState } from \"react\";\r\nimport {MyContext} from '../store/context/myContext';\r\nimport { Card, Skeleton, message } from \"antd\";\r\nimport Questions from \"./Questions\";\r\nimport Choices from \"../components/Choices\";\r\nimport { getASNTSDetail } from \"../store/actions/assignments\";\r\nimport { createGradedASNT } from \"../store/actions/gradedAssignments\";\r\nimport Hoc from \"../hoc/hoc\";\r\n\r\nconst cardStyle = {\r\n  marginTop: \"20px\",\r\n  marginBottom: \"20px\"\r\n};\r\n\r\nconst AssignmentDetail = (props) => {\r\n\r\n  const {state, dispatch} = useContext(MyContext);\r\n  const {token, currentAssignment, loading, username} = state \r\n  const [usersAnswers, setUsersAnswers] = useState({})\r\n\r\n  var errorMessage = null;\r\n\r\n  useEffect(() => {\r\n    if (token !== undefined && token !== null) {\r\n       getASNTSDetail(token, props.match.params.id,dispatch);\r\n    }\r\n    if (state.error) { errorMessage = message.error(state.error)};\r\n    if (state.message) { errorMessage = message.success(state.message)};\r\n  }, [token, state.error, state.message]);\r\n\r\n\r\n  const onChange = (e, qId) => {\r\n    usersAnswers[qId] = e.target.value;\r\n    setUsersAnswers(usersAnswers)\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    \r\n    message.success(\"Submitting your assignment!\");\r\n    const asnt = {\r\n      username: username,\r\n      asntId: currentAssignment.id,\r\n      answers: usersAnswers\r\n    };\r\n    createGradedASNT(token, asnt,dispatch)\r\n    props.history.push(\"/assignment\");\r\n    \r\n  }\r\n\r\n  \r\n  const { title } = currentAssignment;\r\n  \r\n\r\n    return (\r\n      <Hoc>\r\n      {errorMessage}\r\n        {Object.keys(currentAssignment).length > 0 ? (\r\n          <Hoc>\r\n            {loading ? (\r\n              <Skeleton active />\r\n            ) : (\r\n              <Card title={title}>\r\n                <Questions\r\n                  submit={handleSubmit}\r\n                  questions={currentAssignment.questions.map(q => {\r\n                    return (\r\n                      <Card\r\n                        style={cardStyle}\r\n                        type=\"inner\"\r\n                        key={q.id}\r\n                        title={`${q.order}. ${q.question}`}\r\n                      >\r\n                        <Choices\r\n                          questionId={q.order}\r\n                          choices={q.choices}\r\n                          change={onChange}\r\n                          usersAnswers={usersAnswers}\r\n                        />\r\n                      </Card>\r\n                    );\r\n                  })}\r\n                />\r\n              </Card>\r\n            )}\r\n          </Hoc>\r\n        ) : null}\r\n      </Hoc>\r\n    );\r\n};\r\n\r\n\r\nexport default AssignmentDetail;\r\n","import React from \"react\";\r\nimport { Form, Input, Icon, Button } from \"antd\";\r\nimport Hoc from \"../hoc/hoc\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nlet id = 0;\r\n\r\nconst QuestionForm = (props) => {\r\n\r\n  const remove = k => {\r\n    const { form } = props;\r\n    const keys = form.getFieldValue(\"keys\");\r\n    if (keys.length === 1) return;\r\n    form.setFieldsValue({\r\n      keys: keys.filter(key => key !== k)\r\n    });\r\n  };\r\n\r\n  const add = () => {\r\n    const { form } = props;\r\n    const keys = form.getFieldValue(\"keys\");\r\n    const nextKeys = keys.concat(++id);\r\n    form.setFieldsValue({\r\n      keys: nextKeys\r\n    });\r\n  };\r\n\r\n\r\n    const { getFieldDecorator, getFieldValue } = props.form;\r\n    getFieldDecorator(\"keys\", { initialValue: [] });\r\n    const keys = getFieldValue(\"keys\");\r\n    const formItems = keys.map((k, index) => (\r\n      <FormItem label={index === 0 ? \"Choices\" : \"\"} key={k}>\r\n        {getFieldDecorator(`questions[${props.id}]choices[${k}]`, {\r\n          validateTrigger: [\"onChange\", \"onBlur\"],\r\n          rules: [\r\n            {\r\n              required: true,\r\n              whitespace: true,\r\n              message: \"Please input a choice to the question\"\r\n            }\r\n          ]\r\n        })(<Input placeholder=\"Answer choice\" />)}\r\n        {keys.length > 1 ? (\r\n          <Icon\r\n            className=\"dynamic-delete-button\"\r\n            type=\"minus-circle-o\"\r\n            disabled={keys.length === 1}\r\n            onClick={() => remove(k)}\r\n          />\r\n        ) : null}\r\n      </FormItem>\r\n    ));\r\n    return (\r\n      <Hoc>\r\n        <FormItem label=\"Question: \">\r\n          {getFieldDecorator(`question[${props.id}]`, {\r\n            validateTrigger: [\"onChange\", \"onBlur\"],\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input a question\"\r\n              }\r\n            ]\r\n          })(<Input placeholder=\"Add a question\" />)}\r\n        </FormItem>\r\n        <FormItem label=\"Answer: \">\r\n          {getFieldDecorator(`answers[${props.id}]`, {\r\n            validateTrigger: [\"onChange\", \"onBlur\"],\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input an answer to this question\"\r\n              }\r\n            ]\r\n          })(<Input placeholder=\"What is the answer?\" />)}\r\n        </FormItem>\r\n        {formItems}\r\n        <FormItem>\r\n          <Button type=\"dashed\" onClick={add} style={{ width: \"60%\" }}>\r\n            <Icon type=\"plus\" /> Add an answer choice\r\n          </Button>\r\n        </FormItem>\r\n      </Hoc>\r\n    );\r\n};\r\n\r\nexport default QuestionForm;\r\n","import React,  { useContext, useState } from \"react\";\r\nimport {MyContext} from '../store/context/myContext';\r\nimport { Form, Input, Icon, Button, Divider } from \"antd\";\r\nimport QuestionForm from \"./QuestionForm\";\r\nimport Hoc from \"../hoc/hoc\";\r\nimport { createASNT } from \"../store/actions/assignments\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst AssignmentCreate = (props) => {\r\n\r\n  const [formCount , setFormCount] = useState(1)\r\n  const {state, dispatch} = useContext(MyContext)\r\n\r\n  const {token, username} = state\r\n \r\n\r\n  const remove = () => {\r\n    setFormCount(formCount - 1)\r\n  };\r\n\r\n const add = () => {\r\n    setFormCount(formCount + 1)\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        const questions = [];\r\n        for (let i = 0; i < values.questions.length; i += 1) {\r\n          questions.push({\r\n            title: values.question[i],\r\n            choices: values.questions[i].choices.filter(el => el !== null),\r\n            answer: values.answers[i]\r\n          });\r\n        }\r\n        const asnt = {\r\n          teacher: username,\r\n          title: values.title,\r\n          questions:questions\r\n        };\r\n        createASNT(token, asnt,dispatch);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n    const { getFieldDecorator } = props.form;\r\n    const questions = [];\r\n    for (let i = 0; i < formCount; i += 1) {\r\n      questions.push(\r\n        <Hoc key={i}>\r\n          {questions.length > 0 ? (\r\n            <Icon\r\n              className=\"dynamic-delete-button\"\r\n              type=\"minus-circle-o\"\r\n              disabled={questions.length === 0}\r\n              onClick={remove}\r\n            />\r\n          ) : null}\r\n          <QuestionForm id={i} {...props} />\r\n          <Divider />\r\n        </Hoc>\r\n      );\r\n    }\r\n    return (\r\n      <Form onSubmit={handleSubmit}>\r\n        <h1>Create an assignment</h1>\r\n        <FormItem label={\"Title: \"}>\r\n          {getFieldDecorator(`title`, {\r\n            validateTrigger: [\"onChange\", \"onBlur\"],\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input a title\"\r\n              }\r\n            ]\r\n          })(<Input placeholder=\"Add a title\" />)}\r\n        </FormItem>\r\n        {questions}\r\n        <FormItem>\r\n          <Button type=\"secondary\" onClick={add}>\r\n            <Icon type=\"plus\" /> Add question\r\n          </Button>\r\n        </FormItem>\r\n        <FormItem>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  };\r\n\r\nconst WrappedAssignmentCreate = Form.create()(AssignmentCreate);\r\n\r\n\r\nexport default WrappedAssignmentCreate;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Hoc from \"./hoc/hoc\";\r\nimport CustomLayout from \"./containers/Layout\";\r\nimport Login from \"./containers/Login\";\r\nimport Signup from \"./containers/Signup\";\r\nimport Profile from \"./containers/Profile\";\r\nimport AssignmentList from \"./containers/AssignmentList\";\r\nimport AssignmentDetail from \"./containers/AssignmentDetail\";\r\nimport AssignmentCreate from \"./containers/AssignmentCreate\";\r\n\r\nconst BaseRouter = () => (\r\n  <Hoc>\r\n    \r\n    <Route exact path=\"/\" component={CustomLayout} />\r\n    <Route exact path=\"/assignment/\" component={AssignmentList} />\r\n    <Route exact path=\"/create/\" component={AssignmentCreate} />\r\n    <Route exact path=\"/login/\" component={Login} />\r\n    <Route exact path=\"/signup/\" component={Signup} />\r\n    <Route exact path=\"/assignments/:id\" component={AssignmentDetail} />\r\n    <Route exact path=\"/profile/:id\" component={Profile} />\r\n  </Hoc>\r\n);\r\n\r\nexport default BaseRouter;\r\n","/* eslint-disable max-classes-per-file */\r\n/* eslint-disable react/no-multi-comp */\r\n\r\nimport React, { useContext, useState} from \"react\";\r\n// import {MyContext} from '../store/context/myContext';\r\n// import { Link, withRouter } from \"react-router-dom\";\r\n// import * as actions from \"../store/actions/auth\";\r\n// import { createMedia } from '@artsy/fresnel';\r\nimport PropTypes from 'prop-types';\r\n// import {Button, Container, Header, Icon, Menu,\r\n//   Segment, Visibility } from 'semantic-ui-react';\r\nimport {Container, Header } from 'semantic-ui-react';\r\n\r\n\r\n// const { MediaContextProvider, Media } = createMedia({\r\n//   breakpoints: {\r\n//     mobile: 0,\r\n//     tablet: 768,\r\n//     computer: 1024,\r\n//   },\r\n// })\r\n\r\n/* Heads up!\r\n * HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled\r\n * components for such things.\r\n */\r\nexport const HomepageHeading = ({ mobile }) => (\r\n  <Container text>\r\n    <Header\r\n      as='h1'\r\n      content='Che-Art'\r\n      inverted\r\n      style={{\r\n        fontSize: mobile ? '2em' : '4em',\r\n        fontWeight: 'normal',\r\n        marginBottom: 0,\r\n        marginTop: mobile ? '1.5em' : '1em',\r\n      }}\r\n    />\r\n    <Header\r\n      as='h2'\r\n      content='In a chemical engineering world'\r\n      inverted\r\n      style={{\r\n        fontSize: mobile ? '1.5em' : '1.7em',\r\n        fontWeight: 'normal',\r\n        marginTop: mobile ? '0.5em' : '1.5em',\r\n        fontFamily: \"Lucida Console\",\r\n      }}\r\n    />\r\n    {/* <Button primary size='huge'>\r\n      Get Started\r\n      <Icon name='right arrow' />\r\n    </Button> */}\r\n  </Container>\r\n)\r\n\r\nHomepageHeading.propTypes = {\r\n  mobile: PropTypes.bool,\r\n}\r\n\r\n/* Heads up!\r\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\r\n * It can be more complicated, but you can create really flexible markup.\r\n */\r\n// const DesktopContainer = (props) => {\r\n\r\n//   const [fixed, setFixed] = useState();\r\n\r\n//   const hideFixedMenu = () => setFixed(false )\r\n//   const showFixedMenu = () => setFixed(true )\r\n\r\n\r\n//   const {state, dispatch} = useContext(MyContext);\r\n//   const isAuthenticated = state.token !== null\r\n\r\n//   const logout = () => {\r\n//     actions.logout(dispatch)\r\n//     props.history.push(\"/\");\r\n//     props.history.push(\"/\");\r\n//     }\r\n\r\n//     const { children } = props\r\n\r\n//     return (\r\n//       <Media greaterThan='mobile'>\r\n//         <Visibility\r\n//           once={false}\r\n//           onBottomPassed={showFixedMenu}\r\n//           onBottomPassedReverse={hideFixedMenu}\r\n//         >\r\n//           <Segment\r\n//             inverted\r\n//             textAlign='center'\r\n//             style={{ minHeight: 400, padding: '1em 0em' }}\r\n//             vertical\r\n//           >\r\n//             <Menu\r\n//               fixed={fixed ? 'top' : null}\r\n//               inverted={!fixed}\r\n//               pointing={!fixed}\r\n//               secondary={!fixed}\r\n//               size='large'\r\n//             >\r\n//               <Container>\r\n//                 <Menu.Item as='a' >\r\n//                 <Link to=\"/\">Home</Link>\r\n//                 </Menu.Item>\r\n//                 {isAuthenticated ? (\r\n//                 <Menu.Item>\r\n//                   <Link to={`/profile/${state.userId}`}>Profile</Link>\r\n//                 </Menu.Item>\r\n//                   ) : null}\r\n//                 {isAuthenticated && state.is_teacher ? (\r\n//                   <Menu.Item>\r\n//                     <Link to=\"/create\">Create</Link>\r\n//                   </Menu.Item>\r\n//                 ) : null}\r\n//                 {isAuthenticated ? (\r\n//                   <Menu.Item>\r\n//                     <Link to=\"/assignment\">Assignments</Link>\r\n//                   </Menu.Item>\r\n//                 ) : null}\r\n//                 <Menu.Item as='a'>Work</Menu.Item>\r\n//                 <Menu.Item as='a'>Company</Menu.Item>\r\n//                 <Menu.Item as='a'>Careers</Menu.Item>\r\n//                 <Menu.Item position='right'>\r\n//                   { isAuthenticated ? (\r\n//                     <Button as='a' inverted style={{ marginLeft: '0.5em' }} onClick={logout}>\r\n//                     Logout\r\n//                     </Button>\r\n//                     ) : (\r\n//                       <Button as='a' inverted={!fixed}>\r\n//                       <Link to=\"/login\">Login</Link>\r\n//                       </Button>\r\n//                     )}\r\n//                 </Menu.Item>\r\n//               </Container>\r\n//             </Menu>\r\n//             <HomepageHeading />\r\n//           </Segment>\r\n//         </Visibility>\r\n\r\n//         {children}\r\n//       </Media>\r\n//     )\r\n//   }\r\n\r\n// export default withRouter(DesktopContainer)\r\n\r\n// DesktopContainer.propTypes = {\r\n//   children: PropTypes.node,\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\nimport React, { useContext, useState} from \"react\";\r\nimport {MyContext} from '../store/context/myContext';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport * as actions from \"../store/actions/auth\";\r\nimport { createMedia } from '@artsy/fresnel';\r\nimport PropTypes from 'prop-types';\r\nimport {Button,  Icon,  Menu,\r\n  Segment, Sidebar} from 'semantic-ui-react';\r\nimport {HomepageHeading} from './Header';\r\n\r\n  const {  Media } = createMedia({\r\n    breakpoints: {\r\n      mobile: 0,\r\n      tablet: 768,\r\n      computer: 1024,\r\n    },\r\n  })\r\n\r\n\r\nconst MobileContainer = (props) =>  {\r\n\r\n    const [sidebarOpened, setSidebarOpened] = useState();\r\n  \r\n    const handleSidebarHide = () => setSidebarOpened(false )\r\n    const handleToggle = () => setSidebarOpened(true )\r\n  \r\n      const {state, dispatch} = useContext(MyContext);\r\n      const isAuthenticated = state.token !== null\r\n  \r\n      const { children } = props\r\n      \r\n      const logout = () => {\r\n        actions.logout(dispatch)\r\n        props.history.push(\"/\");\r\n      }\r\n    \r\n      return (\r\n        <Media as={Sidebar.Pushable} at='mobile'>\r\n          <Sidebar.Pushable>\r\n            <Sidebar\r\n              as={Menu}\r\n              animation='overlay'\r\n              inverted\r\n              onHide={handleSidebarHide}\r\n              vertical\r\n              visible={sidebarOpened}\r\n            >\r\n            <Menu.Item as='a' >\r\n              <Link to=\"/\">Home</Link>\r\n                </Menu.Item>\r\n              {isAuthenticated ? (\r\n              <Menu.Item>\r\n                <Link to={`/profile/${state.userId}`}>Dashboard</Link>\r\n              </Menu.Item>\r\n                ) : null}\r\n              {isAuthenticated && state.is_teacher ? (\r\n                <Menu.Item>\r\n                  <Link to=\"/create\">Create</Link>\r\n                </Menu.Item>\r\n              ) : null}\r\n              {isAuthenticated ? (\r\n                <Menu.Item>\r\n                  <Link to=\"/assignment\">Assignments</Link>\r\n                </Menu.Item>\r\n              ) : null}\r\n              <Menu.Item as='a'>Work</Menu.Item>\r\n              <Menu.Item as='a'>Company</Menu.Item>\r\n              <Menu.Item as='a'>Careers</Menu.Item>\r\n              {/* <Menu.Item position='right'>\r\n                { isAuthenticated ? (\r\n                  <Button as='a' inverted style={{ marginLeft: '0.5em' }} onClick={logout}>\r\n                  Logout\r\n                  </Button>\r\n                  ) : (\r\n                    <Button as='a' inverted={!fixed}>\r\n                    <Link to=\"/login\">Login</Link>\r\n                    </Button>\r\n                  )}\r\n              </Menu.Item> */}\r\n            \r\n              {/* <Menu.Item as='a' >\r\n              <Link to=\"/\">Home</Link>\r\n              </Menu.Item>\r\n              {isAuthenticated ? (\r\n                  <Menu.Item>\r\n                    <Link to={`/profile/${state.userId}`}>Profile</Link>\r\n                  </Menu.Item>\r\n                    ) : null}\r\n                {isAuthenticated && state.is_teacher ? (\r\n                  <Menu.Item>\r\n                    <Link to=\"/create\">Create</Link>\r\n                  </Menu.Item>\r\n                ) : null}\r\n              <Menu.Item as='a'>Work</Menu.Item>\r\n              <Menu.Item as='a'>Company</Menu.Item>\r\n              <Menu.Item as='a'>Careers</Menu.Item>\r\n              { isAuthenticated ? (\r\n                <Menu.Item key=\"2\" onClick={logout} >\r\n                  Logout\r\n                </Menu.Item>\r\n              ) : (\r\n                <Menu.Item key=\"2\">\r\n                  <Link to=\"/login\">Login</Link>\r\n                </Menu.Item>\r\n              )} */}\r\n            </Sidebar>\r\n  \r\n            <Sidebar.Pusher dimmed={sidebarOpened}>\r\n              <Segment\r\n                inverted\r\n                textAlign='center'\r\n                style={{ minHeight: 350, padding: '1em 0em' }}\r\n                vertical\r\n              >\r\n                \r\n                  <Menu inverted pointing secondary size='large'>\r\n                    <Menu.Item onClick={handleToggle}>\r\n                      <Icon name='sidebar' />\r\n                    </Menu.Item>\r\n                    <Menu.Item as='a' >\r\n                    <Link to=\"/\">Home</Link>\r\n                    </Menu.Item>\r\n                    {isAuthenticated ? (\r\n                    <Menu.Item>\r\n                      <Link to={`/profile/${state.userId}`}>Dashboard</Link>\r\n                    </Menu.Item>\r\n                      ) : null}\r\n                    <Menu.Item position='right'>\r\n                    { isAuthenticated ? (\r\n                      <Button as='a' inverted style={{ marginLeft: '0.5em' }} onClick={logout}>\r\n                      Logout\r\n                      </Button>\r\n                      ) : (\r\n                      <Menu.Item position='right'>\r\n                      <Button as='a' inverted>\r\n                      <Link to=\"/login\">Login</Link>\r\n                      </Button>\r\n                    </Menu.Item>\r\n                      )}\r\n                  </Menu.Item>\r\n                  \r\n                  </Menu>\r\n                \r\n                <HomepageHeading mobile />\r\n              </Segment>\r\n  \r\n              {children}\r\n            </Sidebar.Pusher>\r\n          </Sidebar.Pushable>\r\n        </Media>\r\n      )\r\n    }\r\n  \r\n  export default withRouter(MobileContainer)\r\n  \r\n  MobileContainer.propTypes = {\r\n    children: PropTypes.node,\r\n  }\r\n  ","\r\nimport React,{useContext} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { createMedia } from '@artsy/fresnel';\r\nimport {MyContext} from '../store/context/myContext';\r\nimport { message } from \"antd\";\r\nimport {Button, Container, Divider,\r\n  Grid, Header, Image, List,\r\n  Segment} from 'semantic-ui-react';\r\n// import DesktopContainer from './Header';\r\nimport MobileContainer from './MobileContainer';\r\n\r\nconst { MediaContextProvider, Media } = createMedia({\r\n    breakpoints: {\r\n      mobile: 0,\r\n      tablet: 768,\r\n      computer: 1024,\r\n    },\r\n  })\r\n\r\nconst ResponsiveContainer = ({children}) => (\r\n    /* Heads up!\r\n     * For large applications it may not be best option to put all page into these containers at\r\n     * they will be rendered twice for SSR.\r\n     */\r\n    <MediaContextProvider>\r\n      {/* <DesktopContainer>{children}</DesktopContainer> */}\r\n      <MobileContainer>{children}</MobileContainer>\r\n    </MediaContextProvider>\r\n  )\r\n  \r\n  ResponsiveContainer.propTypes = {\r\n    children: PropTypes.node,\r\n  }\r\n  \r\nconst HomepageLayout = (props) => {\r\n\r\n\r\n  const {state, dispatch } = useContext(MyContext)\r\n\r\n\r\n  var errorMessage = null;\r\n  React.useEffect(() => {\r\n   \r\n    if (state.error) { errorMessage = message.error(state.error)}\r\n    // console.log(state.error, errorMessage)\r\n  }, [state.error]);\r\n\r\n\r\n    return(\r\n      \r\n      <ResponsiveContainer>\r\n      {errorMessage}\r\n      <Segment style={{\r\n        minHeight: 1000,\r\n        fontWeight: 'normal',\r\n        marginTop:  '2em',\r\n        padding: '3em 0em' ,\r\n      }}>\r\n        <Container>\r\n          <Grid.Row textAlign='center'>\r\n            {props.children}\r\n          </Grid.Row>\r\n        </Container>\r\n      </Segment>\r\n  \r\n      {/* <Segment style={{ padding: '0em' }} vertical>\r\n        <Grid celled='internally' columns='equal' stackable>\r\n          <Grid.Row textAlign='center'>\r\n            <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\r\n              <Header as='h3' style={{ fontSize: '2em' }}>\r\n                \"What a Company\"\r\n              </Header>\r\n              <p style={{ fontSize: '1.33em' }}>That is what they all say about us</p>\r\n            </Grid.Column>\r\n            <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\r\n              <Header as='h3' style={{ fontSize: '2em' }}>\r\n                \"I shouldn't have gone with their competitor.\"\r\n              </Header>\r\n              <p style={{ fontSize: '1.33em' }}>\r\n                <Image avatar src='/images/avatar/large/nan.jpg' />\r\n                <b>Nan</b> Chief Fun Officer Acme Toys\r\n              </p>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n     \r\n      <Segment style={{ padding: '8em 0em' }} vertical>\r\n        <Container text>\r\n          <Header as='h3' style={{ fontSize: '2em' }}>\r\n            Breaking The Grid, Grabs Your Attention\r\n          </Header>\r\n          <p style={{ fontSize: '1.33em' }}>\r\n            Instead of focusing on content creation and hard work, we have learned how to master the\r\n            art of doing nothing by providing massive amounts of whitespace and generic content that\r\n            can seem massive, monolithic and worth your attention.\r\n          </p>\r\n          <Button as='a' size='large'>\r\n            Read More\r\n          </Button>\r\n  \r\n          <Divider\r\n            as='h4'\r\n            className='header'\r\n            horizontal\r\n            style={{ margin: '3em 0em', textTransform: 'uppercase' }}\r\n          >\r\n            <a href='#'>Case Studies</a>\r\n          </Divider>\r\n  \r\n          <Header as='h3' style={{ fontSize: '2em' }}>\r\n            Did We Tell You About Our Bananas?\r\n          </Header>\r\n          <p style={{ fontSize: '1.33em' }}>\r\n            Yes I know you probably disregarded the earlier boasts as non-sequitur filler content, but\r\n            it's really true. It took years of gene splicing and combinatory DNA research, but our\r\n            bananas can really dance.\r\n          </p>\r\n          <Button as='a' size='large'>\r\n            I'm Still Quite Interested\r\n          </Button>\r\n        </Container>\r\n      </Segment> */}\r\n  \r\n      <Segment inverted vertical style={{ padding: '5em 0em' }}>\r\n        <Container>\r\n          <Grid divided inverted stackable>\r\n            <Grid.Row>\r\n              {/* <Grid.Column width={3}>\r\n                <Header inverted as='h4' content='About' />\r\n                <List link inverted>\r\n                  <List.Item as='a'>Sitemap</List.Item>\r\n                  <List.Item as='a'>Contact Us</List.Item>\r\n                  <List.Item as='a'>Religious Ceremonies</List.Item>\r\n                  <List.Item as='a'>Gazebo Plans</List.Item>\r\n                </List>\r\n              </Grid.Column> */}\r\n              {/* <Grid.Column width={3}>\r\n                <Header inverted as='h4' content='Services' />\r\n                <List link inverted>\r\n                  <List.Item as='a'>Banana Pre-Order</List.Item>\r\n                  <List.Item as='a'>DNA FAQ</List.Item>\r\n                  <List.Item as='a'>How To Access</List.Item>\r\n                  <List.Item as='a'>Favorite X-Men</List.Item>\r\n                </List>\r\n              </Grid.Column> */}\r\n              <Grid.Column width={7}>\r\n                <Header as='h4' inverted>\r\n                <p> CheArt for Chemical Engineering Students</p>\r\n                </Header>\r\n                \r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Container>\r\n      </Segment>\r\n    </ResponsiveContainer>\r\n    )\r\n  }\r\n  \r\n  export default HomepageLayout","import React, { useContext,useEffect } from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport BaseRouter from \"./routes\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"antd/dist/antd.css\";\r\nimport * as actions from \"./store/actions/auth\";\r\nimport HomepageLayout from \"./containers/Home\";\r\nimport {MyContext} from './store/context/myContext';\r\n\r\nconst App = () => {\r\n  \r\n  const {state,dispatch} = useContext(MyContext)\r\n\r\n  useEffect(() => {\r\n    actions.authCheckState(dispatch)\r\n  }, [state.token])\r\n  \r\n    return (\r\n        <Router>\r\n         <HomepageLayout>\r\n          <BaseRouter />\r\n         </HomepageLayout>\r\n        </Router>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport {MyContextProvider} from './store/context/myContext';\r\n\r\n\r\nconst app = (\r\n  \r\n  <MyContextProvider>\r\n    <App/>\r\n  </MyContextProvider>\r\n\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}